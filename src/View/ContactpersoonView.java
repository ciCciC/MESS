/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.DatabaseManager;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import Model.Entiteit;
import Model.Contactpersoon;
import java.sql.SQLException;

/**
 *
 * @author Ruben
 */
public class ContactpersoonView extends javax.swing.JFrame {
    
    private boolean wijzigen;
    private String [] attributen;
    private int contactId;
    private HoofdView hv;
    private DatabaseManager dm;
    
    /**
     * Creates new form ContactpersoonView
     */
    public ContactpersoonView(HoofdView hv) {
        super("Nieuwe contactpersoon");
        this.wijzigen = false;
        this.hv = hv;
        dm = new DatabaseManager();
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1_periodegegevens = new javax.swing.JLabel();
        naam = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        telnr = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        toevoegenKnop = new javax.swing.JButton();
        annulerenKnop = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(330, 280));

        jLabel1_periodegegevens.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel1_periodegegevens.setText("Contactpersoon gegevens");

        naam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                naamActionPerformed(evt);
            }
        });

        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });

        jLabel1.setText("Naam");

        jLabel2.setText("Emailadres");

        jLabel3.setText("Telefoonnummer");

        toevoegenKnop.setText("Toevoegen");
        toevoegenKnop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toevoegenKnopActionPerformed(evt);
            }
        });

        annulerenKnop.setText("Annuleren");
        annulerenKnop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annulerenKnopActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(naam, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(telnr, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(toevoegenKnop)
                                .addGap(18, 18, 18)
                                .addComponent(annulerenKnop))))
                    .addComponent(jLabel1_periodegegevens))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1_periodegegevens, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(naam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(telnr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(toevoegenKnop)
                    .addComponent(annulerenKnop))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void naamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_naamActionPerformed
    }//GEN-LAST:event_naamActionPerformed

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
    }//GEN-LAST:event_emailActionPerformed

    private void annulerenKnopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annulerenKnopActionPerformed
        this.dispose();
    }//GEN-LAST:event_annulerenKnopActionPerformed

    private void toevoegenKnopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toevoegenKnopActionPerformed
        if(!wijzigen){
            
            if(alleVakkenControleren()){
                JOptionPane.showMessageDialog(null, "Alle vakken moeten ingevuld worden.");
            }else{

                if(!checkTelnr()){
                    JOptionPane.showMessageDialog(null, "Voer cijfers in.");
                }else{
                    if(!checkAantalCijfers()){
                        JOptionPane.showMessageDialog(null, "Voer max. 10 cijfers in.");
                    }else{
                        Entiteit contactToevoegen = new Contactpersoon(0, naam.getText(), email.getText(), telnr.getText());
                        try {
                            dm.insertEntity(contactToevoegen);
                            JOptionPane.showMessageDialog(null, "Met succes toegevoegd.");
                            this.dispose();
                        } catch (SQLException e) {
                            System.out.println("Fout bij toevoegen functie van ContactpersoonView");
                            e.printStackTrace();
                        }
                    }
                }
            }
        }else if(wijzigen){
            if(alleVakkenControleren()){
                JOptionPane.showMessageDialog(null, "Alle vakken moeten ingevuld worden.");
            }else{

                if(!checkTelnr()){
                    JOptionPane.showMessageDialog(null, "Voer cijfers in.");
                }else{
                    if(!checkAantalCijfers()){
                        JOptionPane.showMessageDialog(null, "Voer max. 10 cijfers in.");
                    }else{
                        
                        try {
                            Entiteit contactWijzigen = new Contactpersoon(contactId, naam.getText(), email.getText(), telnr.getText());
                            dm.updateEntity(contactWijzigen);
                            JOptionPane.showMessageDialog(null, "Met succes gewijzigd.");
                            this.dispose();
                        } catch (SQLException e) {
                            System.out.println("Fout bij wijzigen functie van ContactpersoonView");
                            e.printStackTrace();
                        }
                    }
                }
            }
        }else{
            System.out.println("Toevoegen en wijzigen functie werken niet.");
        }
        hv.getRefreshJTable();
    }//GEN-LAST:event_toevoegenKnopActionPerformed

    private boolean checkTelnr(){ // Hier wordt gecontroleerd of de invoer wel cijfers zijn.
        try {
            long temp = Long.parseLong(telnr.getText());
            return true;
        } catch (NumberFormatException e) {
            e.getMessage();
            return false;
        }
    }
    
    private boolean checkAantalCijfers(){ // Hier wordt gecontroleerd of de invoer bestaan uit 10 digits
        return telnr.getText().length() == 10;
    }
    
    /**
     * @param args the command line arguments
     */
    private boolean alleVakkenControleren(){
        return this.naam.getText().isEmpty() || this.email.getText().isEmpty() || this.telnr.getText().isEmpty();
    }
    
    public void contactWijzigen(boolean wijzigen, JTable table){
        this.setTitle("Wijzigen contactpersoon");
        this.toevoegenKnop.setText("wijzigen");
        this.wijzigen = wijzigen;
        attributen = new String[table.getColumnCount()];
        for (int i = 0; i < attributen.length; i++) {
            attributen[i] = "" + table.getValueAt(table.getSelectedRow(), i);
        }
        contactId = Integer.parseInt(attributen[0]); naam.setText(attributen[1]); email.setText(attributen[2]); telnr.setText(attributen[3]);
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ContactpersoonView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ContactpersoonView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ContactpersoonView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ContactpersoonView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new ContactpersoonView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton annulerenKnop;
    private javax.swing.JTextField email;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel1_periodegegevens;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField naam;
    private javax.swing.JTextField telnr;
    private javax.swing.JButton toevoegenKnop;
    // End of variables declaration//GEN-END:variables
}
